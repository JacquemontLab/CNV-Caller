#!/bin/bash

###############################################################################
# Script Name: format_quantisnp_cnv.sh
# Description: This script processes a CNV file generated by QuantiSNP (gzipped or not),
#              filters high-confidence CNVs (≥3 probes, confidence ≥15, length ≥1000 bp),
#              standardizes chromosome labels, and outputs a tab-delimited TSV file
#              (gzipped or not).
#
# Usage: ./format_quantisnp_cnv.sh <quantisnp_cnv_input_file[.gz]> <output_file[.gz]>
#
# Author: Florian Bénitière
# Date: April 2025
###############################################################################

set -euo pipefail

# Check input arguments
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <quantisnp_cnv_input_file[.gz]> <output_file[.gz]>"
    exit 1
fi

# Assign input and output from arguments
input_file="$1"
output_file="$2"


# Determine whether the input file is gzipped
if [[ "$input_file" == *.gz ]]; then
    read_cmd="zcat"
    # Optionally fallback to gunzip -c if zcat not available
    if ! command -v zcat &>/dev/null; then
        read_cmd="gunzip -c"
    fi
else
    read_cmd="cat"
fi

# Parses and filters CNV calls from a gzipped QuantiSNP file (excluding header), standardizes chromosome names, applies quality thresholds, and outputs a compressed TSV.
$read_cmd "${input_file}" | awk 'BEGIN {
    print "SampleID\tChr\tStart\tEnd\tCopy_Number\tConfidence\tNum_Probes\tLength\tStart_SNP\tEnd_SNP"
}
NR > 1 {  # Skip the first line (NR is the line number)
    sample = $1
    chr = "chr" $2

    # Replace chr23 with chrX
    gsub("chr23", "chrX", chr)

    start = $3
    end = $4
    startsnp = $5
    endsnp = $6
    len = $7
    nbprobes = $8
    copynumber = $9
    conf = $10
    
    # Force numeric conversion
    nbprobes += 0
    len += 0
    conf += 0
    if (nbprobes >= 3 && conf >= 15 && len >= 1000) {
        print sample"\t"chr"\t"start"\t"end"\t"copynumber"\t"conf"\t"nbprobes"\t"len"\t"startsnp"\t"endsnp
    }
}' | {
    if [[ "$output_file" == *.gz ]]; then
        gzip > "$output_file"
    else
        cat > "$output_file"
    fi
}